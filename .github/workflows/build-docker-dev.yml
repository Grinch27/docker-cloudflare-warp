name: Build Docker (dev)

on:
  schedule:
    - cron: "0 0 * * *"
  repository_dispatch:
  workflow_dispatch:
    inputs:
      path_dockerfile:
        description: "dockerfile path in repo"
        required: true
        default: "Dockerfile"
        type: string
      package_app:
        description: "Input package"
        required: true
        default: "cloudflare-warp"
        type: string
      dockerhub_repo:
        description: "Docker Hub repository"
        required: true
        default: "grinch27/cloudflare-warp"
        type: string

env:
  TZ: UTC
  path_dockerfile: ${{ inputs.path_dockerfile || 'Dockerfile' }}
  package_app: ${{ inputs.package_app || 'cloudflare-warp' }}
  dockerhub_repo: ${{ inputs.dockerhub_repo || 'grinch27/cloudflare-warp' }}

jobs:
  build:
    name: Build Docker
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    services:
      registry:
        image: registry:latest
        ports:
          - 5000:5000
    strategy:
      matrix:
        arch: ["linux/amd64", "linux/arm64"]
    steps:
      - name: Checkout DIY
        uses: actions/checkout@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: ${{ matrix.arch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
        with:
          version: latest
          driver-opts: network=host
          buildkitd-flags: "--allow-insecure-entitlement network.host"

      - name: Log in to Docker Hub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get package version
        id: ver
        working-directory: /
        env:
          OS_ARCH: "amd64"
          GPG_KEY_URL: "https://pkg.cloudflareclient.com/pubkey.gpg"
          KEYRING_FILE: "/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg"
          SOURCE_LIST_FILE: "/etc/apt/sources.list.d/cloudflare-client.list"
          PACKAGE_SOURCE_URL: "https://pkg.cloudflareclient.com/"
        run: |
          echo -e "Current working directory: $(pwd)"

          # APT
          sudo -E apt-get -y -qq update
          sudo -E apt-get -y -qq install \
            ca-certificates \
            curl \
            gpg \
            lsb-release

          # Add gpg key
          # OS_ARCH=$(dpkg --print-architecture)
          OS_VER=$(lsb_release -cs)
          curl -fsSL ${GPG_KEY_URL} | gpg --yes --dearmor --output ${KEYRING_FILE}
          echo "deb [signed-by=${KEYRING_FILE}] ${PACKAGE_SOURCE_URL} ${OS_VER} main" | sudo tee ${SOURCE_LIST_FILE}
          sudo -E apt-get -y -qq update

          # apt-cache
          apt-cache show ${{ env.package_app }}
          apt-cache policy ${{ env.package_app }}
          apt-cache showpkg ${{ env.package_app }}
          apt-cache depends ${{ env.package_app }}
          apt-cache rdepends ${{ env.package_app }}
          apt-cache madison ${{ env.package_app }}

          # $GITHUB_ENV
          ver_amd64=$(apt-cache policy ${{ env.package_app }}:${{ env.OS_ARCH }} | grep Candidate: | awk '{print $2}')
          echo "version: $ver_amd64"
          echo "version=$ver_amd64" >> ${GITHUB_OUTPUT}

          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@master
        with:
          images: ${{ env.dockerhub_repo }}
          tags: |
            type=raw,value=latest,enabled=true
            type=raw,value=${{ steps.ver.outputs.version }},enabled=true
          flavor: latest=false

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@master
        with:
          context: .
          file: ${{ github.workspace }}/${{ env.path_dockerfile }}
          no-cache: false
          platforms: ${{ matrix.arch }}
          load: true
          push: true
          tags: localhost:5000/${{ env.dockerhub_repo }}

      - name: Test Docker image
        id: test
        env:
          image: localhost:5000/${{ env.dockerhub_repo }}
          container_name: ${{ env.package_app }}
        run: |
          # Run Docker container
          docker run \
            --name ${{ env.container_name }} \
            --rm \
            -d \
            ${{ env.image }} \
            /bin/bash -c "uname -a && sleep infinity"

          # List all installed packages
          docker exec ${{ env.container_name }} dpkg -l

          # DIY command
          docker exec ${{ env.container_name }} warp-cli --version | tee /dev/stderr | grep 'warp-cli'

          # Stop Docker container & Remove Docker image
          docker stop ${{ env.container_name }}
          docker rmi ${{ env.image }}

          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Push Docker image to Docker Hub
        if: steps.test.outputs.status == 'success'
        uses: docker/build-push-action@master
        with:
          context: .
          file: ${{ github.workspace }}/${{ env.path_dockerfile }}
          no-cache: false
          platforms: ${{ matrix.arch }}
          load: false
          push: true
          tags: ${{ env.dockerhub_repo }}:${{ matrix.arch }}

      # - name: Push Docker image to Docker Hub
      #   if: steps.test.outputs.status == 'success'
      #   run: |
      #     docker tag localhost:5000/${{ env.dockerhub_repo }}:${{ matrix.arch }} ${{ env.dockerhub_repo }}:${{ matrix.arch }}
      #     docker push ${{ env.dockerhub_repo }}:${{ matrix.arch }}
