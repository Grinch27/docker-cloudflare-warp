name: Build Docker (Dev)

on:
  schedule:
    - cron: "0 0 * * *"
  repository_dispatch:
  workflow_dispatch:
    inputs:
      path_dockerfile:
        description: "dockerfile path in repo"
        required: true
        default: "Dockerfile"
        type: string
      package_app:
        description: "Input package"
        required: true
        default: "cloudflare-warp"
        type: string
      arch_branch:
        description: "Input arch"
        required: true
        default: "linux/amd64,linux/arm64"
        type: string
      dockerhub_repo:
        description: "Docker Hub repository"
        required: true
        default: "grinch27/cloudflare-warp"
        type: string

env:
  TZ: UTC
  path_dockerfile: ${{ inputs.path_dockerfile || 'Dockerfile' }}
  package_app: ${{ inputs.package_app || 'cloudflare-warp' }}
  arch_branch: ${{ inputs.arch_branch || 'linux/amd64,linux/arm64' }}
  dockerhub_repo: ${{ inputs.dockerhub_repo || 'grinch27/cloudflare-warp' }}

jobs:
  build:
    name: Build Docker
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    services:
      registry:
        image: registry:latest
        ports:
          - 5000:5000
    steps:
      - name: Checkout DIY
        uses: actions/checkout@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: ${{ env.arch_branch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
        with:
          driver-opts: network=host

      - name: Build and push to local registry
        uses: docker/build-push-action@master
        with:
          context: .
          file: ${{ github.workspace }}/${{ env.path_dockerfile }}
          no-cache: false
          platforms: ${{ env.arch_branch }}
          load: false
          push: true
          tags: localhost:5000/${{ env.dockerhub_repo }}:latest
          # labels: ${{ steps.meta.outputs.labels }}

      - name: Inspect
        run: |
          docker buildx imagetools inspect localhost:5000/${{ env.dockerhub_repo }}:latest
          docker pull localhost:5000/${{ env.dockerhub_repo }}:latest

      - name: Test Docker image
        id: test
        env:
          image: localhost:5000/${{ env.dockerhub_repo }}:latest
          container_name: ${{ env.package_app }}
        run: |
          # docker run --name ${{ env.container_name }} --rm -d ${{ env.image }} sleep infinity
          docker run \
            --name ${{ env.container_name }} \
            --rm \
            -d \
            ${{ env.image }} \
            /bin/bash -c "uname -a && sleep infinity"

          # List all installed packages
          docker exec ${{ env.container_name }} dpkg -l

          # Execute command in Docker container
          docker exec ${{ env.container_name }} warp-cli --version | tee /dev/stderr | grep 'warp-cli'

          # Stop Docker container
          docker stop ${{ env.container_name }}

          # Remove Docker image
          # docker rmi ${{ env.image }}

          echo "status=success" >> ${GITHUB_OUTPUT}

      # - name: Tag and push Docker image
      #   run: |
      #     docker tag localhost:5000/${{ env.dockerhub_repo }}:latest ${{ env.dockerhub_repo }}:latest
      #     docker push ${{ env.dockerhub_repo }}:latest

# Run docker buildx imagetools inspect localhost:5000/grinch27/cloudflare-warp:latest
# docker buildx imagetools inspect localhost:5000/grinch27/cloudflare-warp:latest
# docker pull localhost:5000/grinch27/cloudflare-warp:latest
# shell: /usr/bin/bash -e {0}
# env:
# TZ: UTC
# path_dockerfile: Dockerfile
# package_app: cloudflare-warp
# arch_branch: linux/amd64,linux/arm64
# dockerhub_repo: grinch27/cloudflare-warp
# Name: localhost:5000/grinch27/cloudflare-warp:latest
# MediaType: application/vnd.oci.image.index.v1+json
# Digest: sha256:97c5b53c98a46cbf399a49a8d3ab01b44d095984f033c664ec329b8b42a701cf
# Manifests:
# Name: localhost:5000/grinch27/cloudflare-warp:latest@sha256:44c71287598d1bdae10ee94504d17d7e7ac13dfecd4aa098fa35d3fce1cf58a7
# MediaType: application/vnd.oci.image.manifest.v1+json
# Platform: linux/amd64
# Name: localhost:5000/grinch27/cloudflare-warp:latest@sha256:90c38f3ae6248d9b455a10d267e514a06fc41f1bb734789b5d57b8c11ca3b4bb
# MediaType: application/vnd.oci.image.manifest.v1+json
# Platform: linux/arm64
# Name: localhost:5000/grinch27/cloudflare-warp:latest@sha256:829e62e5e700750e3761811e29ba7faa4c763fcaf08818e72c3dff8dc624bd48
# MediaType: application/vnd.oci.image.manifest.v1+json
# Platform: unknown/unknown
# Annotations:
# vnd.docker.reference.digest: sha256:44c71287598d1bdae10ee94504d17d7e7ac13dfecd4aa098fa35d3fce1cf58a7
# vnd.docker.reference.type: attestation-manifest
# Name: localhost:5000/grinch27/cloudflare-warp:latest@sha256:e5556459743e462305267688f0458fbfd9c12da9cf6b9b70a77eb897fcd33f78
# MediaType: application/vnd.oci.image.manifest.v1+json
# Platform: unknown/unknown
# Annotations:
# vnd.docker.reference.digest: sha256:90c38f3ae6248d9b455a10d267e514a06fc41f1bb734789b5d57b8c11ca3b4bb
# vnd.docker.reference.type: attestation-manifest
# latest: Pulling from grinch27/cloudflare-warp
# 09f376ebb190: Pulling fs layer
# 701478fdcf54: Pulling fs layer
# 09f376ebb190: Verifying Checksum
# 09f376ebb190: Download complete
# 701478fdcf54: Verifying Checksum
# 701478fdcf54: Download complete
# 09f376ebb190: Pull complete
# 701478fdcf54: Pull complete
# Digest: sha256:97c5b53c98a46cbf399a49a8d3ab01b44d095984f033c664ec329b8b42a701cf
# Status: Downloaded newer image for localhost:5000/grinch27/cloudflare-warp:latest
# localhost:5000/grinch27/cloudflare-warp:latest
